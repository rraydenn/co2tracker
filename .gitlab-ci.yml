image: node:23-alpine

stages:
  - setup
  - sonarqube-check
  - deploy

variables:
  DEPLOY_PATH: '/var/www/'
  DEPLOY_USER: 'gitlabci'
  HOST: '192.168.75.18'

before_script:
  - apk add --no-cache openssh
  - chmod 400 $CI_SSH_KEY

sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop

deploy_and_run_api:
  stage: deploy
  only:
    - main
  script:
    - echo "Installing dependencies and building the API..."
    - cd ./api
    - npm install
    - node ace build
    - scp -r -o StrictHostKeyChecking=no -i $CI_SSH_KEY ./api-app $DEPLOY_USER@$HOST:$DEPLOY_PATH
    - ssh -o StrictHostKeyChecking=no -i $CI_SSH_KEY $DEPLOY_USER@$HOST "
      cd /var/www/api-app &&
      npm ci --omit="dev" &&
      cp /etc/secrets/.env . &&
      cd .. &&
      pm2 restart ecosystem.config.js"

deploy_and_run_frontend:
  stage: deploy
  only:
    - main
  script:
    - cd ./frontend
    - npm install
    - npm run build
    - scp -r -o StrictHostKeyChecking=no -i $CI_SSH_KEY ./dist $DEPLOY_USER@$HOST:$DEPLOY_PATH
